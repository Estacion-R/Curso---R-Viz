---
title: "üåü Taller: Visualizaci√≥n de datos con R y ggplot2"
subtitle: "Estructura y contenido del taller"
author: "Pablo Tiscornia"
institute: "[Estaci√≥n R](https://estacion-r.com/)"
date: today
format:
  revealjs:
    theme: [default, ../estacion-r-styles.css]
    logo: "../img/logo-estacion_r.png"
    footer: "Visualizaci√≥n de datos"
    slide-number: true
    embed-resources: true
    chalkboard: 
      theme: whiteboard
      boardmarker-width: 3
      chalk-width: 5
      chalk-effect: 0.25
    transition: slide
    background-transition: fade
    highlight-style: github
    code-line-numbers: true
    code-copy: true
    scrollable: true
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    preview-links: auto
    width: 1280
    height: 720
    margin: 0.1
    min-scale: 0.2
    max-scale: 2.0
execute:
  echo: true
  warning: false
  message: false
---

```{r}
#| echo: false

library(knitr)
library(tidyverse)
library(eph)
library(arrow)
library(here)
```

```{r}
#| echo: false

df_eph <- read_parquet(here("data/eph_individual_2020_25.parquet"))
tbl_desocup_2020_25 <- read_parquet(here("data/tabla_desocupacion_2020_25.parquet"))
```

# Bienvenidos y bienvenidas a Estaci√≥n R

## Contacto con Estaci√≥n R

<br><br>

::: columns
::: {.column width="33%"}
#### üí¨ [Slack](https://estacion-r.slack.com/archives/C0977AC7ZUG)

#### üîó [Web](https://estacion-r.com)

#### ‚úâÔ∏è [Correo](mailto:pablotiscornia@estacion-r.com)
:::


::: {.column width="33%"}
#### üêò [Mastodon](https://mastodon.social/@pablote)

#### ùïè [X](https://twitter.com/estacion_erre)
:::

::: {.column width="33%"}
#### [in] [LinkedIn](https://www.linkedin.com/company/estacion-r/)

#### [ig] [Instagram](https://instagram.com/estacion.erre)
:::
:::


## Presentaci√≥n

<br>

- Deja una breve presentaci√≥n sobre vos  [üëâüèªac√°](https://docs.google.com/document/d/11PJVwtP5yFdyIH0mHVsC9LEj5PLcSkG1RXgZWZimBog/edit?tab=t.0#heading=h.8angkgqjszga)

# Puesta a punto ‚öôÔ∏è {background-color="#4F7CFF"}

## Plataformas y herramientas durante la cursada

::: {.columns}
::: {.column width="50%"}
![](img/pag_estacionr_mis_cursos.png){.absolute top="170" left="30" width="800" height="400"}

:::

::: {.column width="50%"}
![](img/slack_intro_viz.png){.absolute .fragment top="150" right="80" width="450"}
:::
:::

## Rstudio

### Arm√° tu entorno de trabajo

<br>

#### Descarg√° este dataset atrav√©s ejecutando el siguiente c√≥digo:

```{r}
#| eval: false
df_eph <- read.csv("https://raw.githubusercontent.com/Estacion-R/Curso---R-Viz/refs/heads/main/datos/eph_2020_25.csv?token=GHSAT0AAAAAADDAADKOUWHHX7O3RLOFN6EQ2FXKU7A")
```

# üß≠ Objetivos del taller

::: {.highlight-box}
### Al finalizar este taller podr√°s:

- Comprender los **principios fundamentales** de la visualizaci√≥n
- Construir gr√°ficos **efectivos y reproducibles** con `{ggplot2}`
- Aplicar **estrategias de dise√±o** para mejorar la est√©tica
- Crear visualizaciones **interactivas y anotadas**
- Trabajar con **datos reales**
:::

# üìö Programa del taller

## Encuentro 1: Fundamentos {.smaller}


#### üîç ¬øPor qu√© visualizar?

- El rol de la visualizaci√≥n en an√°lisis y comunicaci√≥n
- Gram√°tica de los gr√°ficos: *data + aesthetics + geoms*

<br>

#### üé® Primeros pasos con ggplot2

- Sintaxis b√°sica: `ggplot(data, aes(x, y)) + geom_*()`
- Gr√°ficos de barras, puntos y l√≠neas
- Variables categ√≥ricas vs. continuas


## Encuentro 2: Dise√±o y est√©tica {.smaller}

#### üé® Personalizaci√≥n visual 

- Control de t√≠tulos, colores y tama√±os
- Paletas de colores 
- Organizaci√≥n espacial con `facet_wrap()`, `{patchwork}`

<br>

#### ‚ú® Buenas pr√°cticas de dise√±o

- Contraste, jerarqu√≠a, balance visual
- Identificar malas pr√°cticas
- Preparaci√≥n para publicaci√≥n


## Encuentro 3: Anotaciones, Interactividad y Publicaci√≥n {.smaller}

#### üìù Anotaciones inteligentes

- `annotate()`, `geom_text()` y `geom_label()`
- Uso de `{ggannotate}` para exportar c√≥digo

<br>

#### üöÄ Gr√°ficos interactivos

- `ggplotly()` y nociones de `{plotly}`
- Exportaci√≥n con `ggsave()`
- Narrativas visuales efectivas
:::


# La gram√°tica de los gr√°ficos üìú

## Componentes esenciales {background-color="#F5F5F5"}

<br>

::: {.fragment .fade-in-then-semi-out}
### 1. Data üìä
Los datos que queremos visualizar
:::

<br>

::: {.fragment .fade-in-then-semi-out}
### 2. Aesthetics üé®
Mapeo de variables a propiedades visuales (x, y, color, size)
:::

<br>

::: {.fragment}
### 3. Geoms üìà
Objetos geom√©tricos que representan los datos (puntos, l√≠neas, barras)
:::


## data

::: {.columns}
::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false

ggplot(data= <DATA>)
```
:::


::: {.column width="50%"}
```{r out.width="80%"}
#| echo: false

include_graphics("img/ggplot2_data.png")
```
:::
:::


## mapping

::: {.columns}
::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|2|3"

ggplot(data= <DATA>,
       mapping = aes(x = <VAR_X>, 
                     y = <VAR_Y>)
       )
```
:::

::: {.column width="50%"}
```{r out.width="80%"}
#| echo: false

include_graphics("img/ggplot2_mapping.png")
```
:::
:::

## geometries

::: {.columns}
::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "5"

ggplot(data= <DATA>,
       mapping = aes(x = <VAR_X>, 
                     y = <VAR_Y>)
       ) +
  geom_col()
         
```
:::

::: {.column width="50%"}
```{r out.width="80%"}
#| echo: false

include_graphics("img/ggplot2_geom.png")
```
:::
:::


## Ejemplo pr√°ctico: primer gr√°fico

```{r}
#| echo: true
#| eval: true

# Tabla desocupaci√≥n para los per√≠odos 2020-2025
tbl_desocup_2020_25
```

## Ejemplo pr√°ctico: primer gr√°fico - Columnas

::: {columns}
::: {.column width="70%"}
```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "|1|2|3|4"

ggplot(data = tbl_desocup_2020_25,
       mapping = aes(x = Anio, y = n)) +
  geom_col()
```
:::

::: {.column width="30%"}
```{r}
tbl_desocup_2020_25
```

:::
:::

## Ejemplo pr√°ctico: primer gr√°fico - Puntos

```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "4"

ggplot(data = tbl_desocup_2020_25,
       mapping = aes(x = Anio, y = n)) +
  geom_point()
```


## Ejemplo pr√°ctico: primer gr√°fico - L√≠neas

```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "4"

ggplot(data = tbl_desocup_2020_25,
       mapping = aes(x = Anio, y = n)) +
  geom_line()
```

## Ejercicio üéØ - Experimentar con geoms {.smaller}

### Con los datos `tbl_desocup_2020_25`, cre√°:

<br>

1. **Un gr√°fico de puntos** con `geom_point()` 
2. **Cambia el tama√±o** de los puntos (`size = 4`)
3. **Cambia el color** a azul (`color = "blue"`)
4. **Combina** barras Y puntos en el mismo gr√°fico


## Soluci√≥n - Geoms {.smaller}

```{r}
#| echo: true
#| eval: true

# Gr√°fico de puntos b√°sico
ggplot(tbl_desocup_2020_25, 
      aes(x = Anio, y = n)) +
  geom_point()

# Con personalizaci√≥n
ggplot(tbl_desocup_2020_25, 
      aes(x = Anio, y = n)) +
  geom_point(size = 4, color = "blue")

# Combinado
ggplot(tbl_desocup_2020_25, 
      aes(x = Anio, y = n)) +
  geom_col(fill = "lightblue", alpha = 0.7) +
  geom_point(size = 4, color = "red")
```

## Componentes extras ‚ûï {background-color="#F5F5F5"}

::: {.fragment .fade-in-then-semi-out}
### 1. Escalas (scales) üìè
Transformar datos en atributos visuales. Rangos y propiedades de los ejes
:::

<br>

::: {.fragment .fade-in-then-semi-out}
### 2. Facetas (facets) üí†
Dividir datos en subgr√°ficos seg√∫n categor√≠as
:::

<br>

::: {.fragment}
### 3. Themes üñåÔ∏è
Controlar la apariencia general del gr√°fico
:::


## Scales üìè

::: {.columns}
::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|1-5|6-8"

ggplot(data= <DATA>,
       mapping = aes(x = <VAR_X>, 
                     y = <VAR_Y>)
       ) +
  geom_col() +
  scale_y_continuous(
    labels = scales::comma, 
    limits = c(0, 1000000))
```
:::


::: {.column width="50%"}
```{r out.width="80%"}
#| echo: false

include_graphics("img/ggplot2_scales.png")
```
:::
:::


## Facets üí†

::: {.columns}
::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|1-5|8"

ggplot(data= <DATA>,
       mapping = aes(x = <VAR_X>, 
                     y = <VAR_Y>)
       ) +
  geom_col() +
  facet_wrap(~ <VAR_FACET>)

```
:::

::: {.column width="50%"}
```{r out.width="80%"}
#| echo: false

include_graphics("img/ggplot2_facets.png")
```
:::
:::

## Themes üñåÔ∏è

::: {.columns}
::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|1-5|6-10"

ggplot(data= <DATA>,
       mapping = aes(x = <VAR_X>, 
                     y = <VAR_Y>)
       ) +
  geom_col() +
  theme(
    panel.background = element_rect(fill = "lightblue"),
    panel.grid.major = element_line(color = "white"),
    axis.title = element_text(size = 14, face = "bold")
  )
         
```
:::

::: {.column width="50%"}
```{r out.width="80%"}
#| echo: false

include_graphics("img/ggplot2_themes.png")
```
:::
:::


## Seteo de par√°metros
::: {.columns}
::: {.column width="50%"}

#### Para todos los geoms (todas las capas)

<br>

```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "|1-4|5"

ggplot(data= tbl_desocup_2020_25,
       mapping = aes(x = Anio, 
                     y = n)) +
  geom_col()

```
:::
::: {.column width="50%"}

#### Para un geom espec√≠fico (una capa)

<br><br>

```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "|1|2-5"

ggplot() +
  geom_col(
    data= tbl_desocup_2020_25,
    mapping = aes(x = Anio, 
                     y = n))

```
:::
:::

## Seteo de par√°metros - en ggplot()

```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "|1-4|5"
ggplot(data= tbl_desocup_2020_25,
       mapping = aes(x = Anio, 
                     y = n)) +
  geom_col() +
  geom_point(size = 3, color = "red")
```

## Seteo de par√°metros - en geom_*

```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "|1|2-10"
ggplot() +
  geom_col(
    data= tbl_desocup_2020_25,
    mapping = aes(x = Anio, 
                  y = n)) +
  geom_point(
    data= tbl_desocup_2020_25,
    mapping = aes(x = Anio,
                  y = n),
    size = 3, color = "red")
```

## Caso de uso de seteo por capas

::: {.columns}
::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "5-15"
tbl_ocupados_2020_25 <- df_eph |> 
  filter(ESTADO == 1) |> 
  count(ANO4, ESTADO)

ggplot() +
  geom_col(
    data= tbl_desocup_2020_25,
       mapping = aes(x = Anio, 
                     y = n),
    fill = "#4F7CFF") +
  geom_point(
    data= tbl_ocupados_2020_25,
    mapping = aes(x = ANO4,
                  y = n),
    size = 3, color = "red")
```
:::

::: {.column width="50%"}
```{r}
#| echo: false
#| eval: true
#| code-line-numbers: "5-15"
tbl_ocupados_2020_25 <- df_eph |> 
  filter(ESTADO == 1) |> 
  count(ANO4, ESTADO)

ggplot() +
  geom_col(
    data= tbl_desocup_2020_25,
    mapping = aes(x = Anio, 
                  y = n),
    fill = "#4F7CFF") +
  geom_point(
    data= tbl_ocupados_2020_25,
    mapping = aes(x = ANO4,
                  y = n),
    size = 3, color = "red") +
  geom_point(
    data = tibble(x = 2023, y = 10000),
    x = 2023, y = 10000,
    size = 5, color = "green"
  )
```
:::
:::

## Otra capa

::: {.columns}
::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "5-15"
tbl_ocupados_2020_25 <- df_eph |> 
  filter(ESTADO == 1) |> 
  count(ANO4, ESTADO)

ggplot() +
  geom_col(
    data= tbl_desocup_2020_25,
       mapping = aes(x = Anio, 
                     y = n),
    fill = "#4F7CFF") +
  geom_point(
    data= tbl_ocupados_2020_25,
    mapping = aes(x = ANO4,
                  y = n),
    size = 3, color = "red")
```
:::

::: {.column width="50%"}
```{r}
#| echo: false
#| eval: true
#| code-line-numbers: "5-15"
tbl_ocupados_2020_25 <- df_eph |> 
  filter(ESTADO == 1) |> 
  count(ANO4, ESTADO)

ggplot() +
  geom_col(
    data= tbl_desocup_2020_25,
       mapping = aes(x = Anio, 
                     y = n),
    fill = "#4F7CFF") +
  geom_point(
    data= tbl_ocupados_2020_25,
    mapping = aes(x = ANO4,
                  y = n),
    size = 3, color = "red")
```
:::
:::

## aes() y la conexi√≥n al dataset
::: {.columns}
::: {.column width="50%"}
```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "6"

ggplot() +
  geom_col(
    data= tbl_desocup_2020_25,
       mapping = aes(x = Anio, 
                     y = n),
    fill = "#4F7CFF")
```
:::
::: {.column width="50%"}
```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "6"

ggplot() +
  geom_col(
    data= tbl_desocup_2020_25,
       mapping = aes(x = Anio, 
                     y = n,
                     fill = Anio))
```
:::
:::

## Ejercicio pr√°ctico üéØ

## Tu turno: Mapeo vs Fijaci√≥n {background-color="#4F7CFF"}

::: {style="color: white;"}


1. **Todas las barras azules** (fijaci√≥n)
2. **Color diferente por a√±o** (mapeo)

### ¬øCu√°l es cu√°l?
```r
# Versi√≥n A
ggplot(tbl_desocup_2020_25, 
      aes(x = Anio, 
          y = n, 
          fill = factor(Anio))) +
  geom_col()

# Versi√≥n B  
ggplot(tbl_desocup_2020_25, 
      aes(x = Anio, 
          y = n)) +
  geom_col(fill = "blue")
```
:::

# Variables y tipos de gr√°ficos

## Variable continua vs. categ√≥rica {.smaller}

::: {.columns}

::: {.column width="50%"}
### Continuas
- N√∫meros con infinitos valores posibles
- Ejemplos: altura, peso, temperatura
- **Gr√°ficos**: dispersi√≥n, l√≠neas, histogramas, densidad

::: {style="background-color:rgb(229, 232, 240); color: white; padding: 0.5em; border-radius: 0.3em; margin-top: 1em;"}
`geom_point()` `geom_line()` `geom_histogram()`, `geom_density()`
:::
:::

::: {.column width="50%"}
### Categ√≥ricas  
- Categor√≠as o grupos discretos
- Ejemplos: g√©nero, pa√≠s, tratamiento
- **Gr√°ficos**: barras, cajas, torta

::: {style="background-color: #D4FF4F; color: black; padding: 0.5em; border-radius: 0.3em; margin-top: 1em;"}
`geom_col()`, 
:::
:::

:::


# Ejercicio pr√°ctico üéØ

## üîç Ejercicio 1: Identifica los componentes {.smaller}

::: {.columns}
::: {.column width="60%"}
```{r}
#| echo: true
#| eval: true
#| code-line-numbers: false

ggplot(tbl_desocup_2020_25, 
       aes(x = Anio, y = n, fill = factor(Anio))) +
  geom_col() +
  scale_y_continuous(labels = scales::comma) +
  theme_minimal() +
  labs(title = "Desocupaci√≥n 2020-2025")
```
:::

::: {.column width="40%"}
### ¬øPod√©s identificar?
::: {.fragment}
#### üìå **Data**: 
:::

<br>

::: {.fragment}
#### üìå **Aesthetics**: 
:::

<br>

::: {.fragment}
#### üìå **Geom**: 
:::

<br>

::: {.fragment}
#### üìå **Scale**: 
:::

<br>

::: {.fragment}
#### üìå **Theme**: 
:::
:::
:::


## üîç Ejercicio 1: resoluci√≥n {.smaller}

::: {.columns}
::: {.column width="60%"}
```{r}
#| echo: true
#| eval: true
#| code-line-numbers: false

ggplot(tbl_desocup_2020_25, 
       aes(x = Anio, y = n, fill = factor(Anio))) +
  geom_col() +
  scale_y_continuous(labels = scales::comma) +
  theme_minimal() +
  labs(title = "Desocupaci√≥n 2020-2025")
```
:::

::: {.column width="40%"}
### ¬øPod√©s identificar?
::: {.fragment}
#### üìå **Data**: `tbl_desocup_2020_25`
:::

<br>

::: {.fragment}
#### üìå **Aesthetics**: `x = Anio`, `y = n`, `fill = factor(Anio)`
:::

<br>

::: {.fragment}
#### üìå **Geom**: `geom_col()`
:::

<br>

::: {.fragment}
#### üìå **Scale**: `scale_y_continuous()`
:::

<br>

::: {.fragment}
#### üìå **Theme**: `theme_minimal()`
:::
:::
:::

## üéØ Experimentar con geoms {background-color="#D4FF4F"}

<br>

### Con los datos `tbl_desocup_2020_25`, crea:

1. **Un gr√°fico de puntos** con `geom_point()` 
2. **Cambia el tama√±o** de los puntos (`size = 4`)
3. **Cambia el color** a azul (`color = "blue"`)
4. **Combina** barras Y puntos en el mismo gr√°fico


## Soluci√≥n 

```{r}
#| echo: true
#| eval: true
#| code-line-numbers: "|1-3|4|5|6-7"

# Gr√°fico de puntos b√°sico
ggplot(tbl_desocup_2020_25, aes(x = Anio, y = n)) +
  geom_point()

# Con personalizaci√≥n
ggplot(tbl_desocup_2020_25, aes(x = Anio, y = n)) +
  geom_point(size = 4, color = "blue")

# Combinado
ggplot(tbl_desocup_2020_25, aes(x = Anio, y = n)) +
  geom_col(fill = "lightblue", alpha = 0.7) +
  geom_point(size = 4, color = "red")
```

# Personalizaci√≥n y temas

## Sistema de temas de ggplot2 {.smaller}

::: {.columns style="margin-bottom: 2em;"}

::: {.column width="33%"}
::: {.content-card style="text-align: center;"}
**theme_minimal()**  
Limpio y moderno
:::
:::

::: {.column width="33%"}
::: {.content-card style="text-align: center;"}
**theme_classic()**  
Estilo acad√©mico
:::
:::

::: {.column width="33%"}
::: {.content-card style="text-align: center;"}
**theme_void()**  
Sin elementos
:::
:::

:::

::: {.fragment}
::: {.highlight-box style="margin-top: 3em;"}
**Recomendaci√≥n**: Comenzar con `theme_minimal()` y personalizar desde ah√≠
:::
:::

## Paletas de colores accesibles

### Con RColorBrewer {.text-azul}

```{r}
#| echo: true
#| eval: false

# Paleta cualitativa
scale_fill_brewer(type = "qual", palette = "Set2")

# Paleta secuencial  
scale_fill_brewer(type = "seq", palette = "Blues")

# Paleta divergente
scale_fill_brewer(type = "div", palette = "RdYlBu")
```

::: {style="margin-top: 2em;"}
::: {.badge}
Accesible
:::
::: {.badge .azul}
Profesional
:::
::: {.badge}
Variado
:::
:::

# Recursos adicionales üìö

## Para seguir aprendiendo

::: {.columns}

::: {.column width="50%"}
### Recursos 

- [**Data-to-viz**](https://www.data-to-viz.com/): Gu√≠a de visualizaci√≥n
- [**C√©dric Scherer**](https://www.cedricscherer.com/): Beautiful plots
- [**Thomas Lin Pedersen**](https://github.com/thomasp85): Tidy visualization
:::

::: {.column width="50%"}
### Libros esenciales
- **R for Data Science** (Wickham & Grolemund)
- **ggplot2: Elegant Graphics** (Wickham)
- **Fundamentals of Data Visualization** (Wilke)
:::

:::

## Comunidad y ayuda

### üåê Comunidades online

- [#tidytuesday](https://github.com/rfordatascience/tidytuesday)
- [#30DayChartChallenge](https://github.com/30DayChartChallenge/Edition2025)
- R4DS Community (Slack)
- RStudio Community
- Stack Overflow (#ggplot2)


#### üì± En redes sociales
- #RStats/#ggplot en Twitter/X
- r/rstats en Reddit
- LinkedIn R User Groups


# ¬°Gracias! {background-color="#D4FF4F"}

::: {style="color: black; text-align: center;"}


## üéâ ¬°A visualizar se ha dicho!

### Contacto {style="margin-top: 3em;"}

#### üìß pablotiscornia@estacion-r.com  
#### üåê www.estacion-r.com  
#### üê¶ @estacion_erre

:::



